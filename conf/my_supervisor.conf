[inet_http_server]
port=0.0.0.0:9002
username=hyveadmin
password=hyveadmin


[supervisord]
http_port=/tmp/mysupervisor.sock ; (default is to run a UNIX domain socket server)
logfile=/tmp/log/mysupervisor.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB       ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10          ; (num of main logfile rotation backups;default 10)
loglevel=info               ; (logging level;default info; others: debug,warn)
pidfile=/tmp/mysupervisor.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false              ; (start in foreground if true;default false)
minfds=1024                 ; (min. avail startup file descriptors;default 1024)
minprocs=200                ; (min. avail process descriptors;default 200)
user=jedrek

;nocleanup=true              ; (don't clean up tempfiles at start;default false)
;http_username=user          ; (default is no username (open system))
;http_password=123           ; (default is no password (open system))
;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)
;user=chrism                 ; (default is current user, required if root)
;directory=/tmp              ; (default is not to cd during start)
;environment=KEY=value       ; (key value pairs to add to environment)


[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface


[supervisorctl]
serverurl=http://127.0.0.1:9002 ; use a unix:// URL  for a unix socket
username=hyveadmin
password=hyveadmin

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.


;[program:theprogramname]
;command=/bin/cat            ; the program (relative uses PATH, can take args)
;priority=999                ; the relative start priority (default 999)
;autostart=true              ; start at supervisord start (default: true)
;autorestart=true            ; retstart at unexpected quit (default: true)
;startsecs=10                ; number of secs prog must stay running (def. 10)
;startretries=3              ; max # of serial start failures (default 3)
;exitcodes=0,2               ; 'expected' exit codes for process (default 0,2)
;stopsignal=QUIT             ; signal used to kill process (default TERM)
;stopwaitsecs=10             ; max num secs to wait before SIGKILL (default 10)
;user=chrism                 ; setuid to this UNIX account to run the program
;log_stdout=true             ; if true, log program stdout (default true)
;log_stderr=true             ; if true, log program stderr (def false)
;logfile=/var/log/cat.log    ; child log path, use NONE for none; default AUTO
;logfile_maxbytes=1MB        ; max # logfile bytes b4 rotation (default 50MB)
;logfile_backups=10          ; # of logfile backups (default 10)

;
; myflask web service
;
[program:myflask]
environment=PYTHONPATH="$PYTHONPATH:/home/jedrek/work_dir/my_project/myflask/conf"
command=uwsgi --ini /home/jedrek/work_dir/my_project/myflask/conf/uwsgi_local.ini
directory=/home/jedrek/work_dir/my_project/myflask/
process_name=%(program_name)s
autorstart=true
startsecs=10
startretries=36
redirect_stderr=true
stdout_logfile_maxbytes=20MB
stdout_logfile_backups=20
stderr_logfile_maxbytes=20MB
stderr_logfile_backups=20
stdout_logfile=/tmp/myflask-runtime.log
stderr_logfile=/tmp/myflask-error.log
